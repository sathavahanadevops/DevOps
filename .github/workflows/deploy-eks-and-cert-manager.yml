name: Deploy EKS Cluster and Install Cert-Manager

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy EKS Cluster using Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Export Kubeconfig
        run: |
          aws eks update-kubeconfig --name devops-demo --region us-east-1

      - name: Install Ingress Nginx using Helm
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install ingress-nginx ingress-nginx/ingress-nginx --namespace default

      - name: Deploy Nginx and Ingress
        run: |
          kubectl apply -f k8manifests/nginx-deployment-service.yaml
          kubectl apply -f k8manifests/nginx-ingress.yaml

      - name: Verify Deployments and Ingress
        run: |
          kubectl get pods -A
          kubectl get ingress -A
          kubectl get svc -A

  install-cert-manager:
    name: Install Cert-Manager (Requires Approval)
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: install-cert-manager
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Export Kubeconfig
        run: |
          aws eks update-kubeconfig --name devops-demo --region us-east-1

      - name: Install Cert-Manager
        run: |
          echo "Proceeding with Cert-Manager installation..."
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.10.1/cert-manager.yaml
          kubectl apply -f k8manifests/cluster-issuer.yaml
          kubectl apply -f k8manifests/certificate.yaml

  destroy:
    name: Destroy EKS Cluster using Terraform
    runs-on: ubuntu-latest
    if: github.event.inputs.destroy == 'true'
    environment:
      name: destroy-terraform
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Destroy
        working-directory: terraform
        run: terraform destroy -auto-approve
